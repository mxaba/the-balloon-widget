{"version":3,"sources":["components/Footer/Footer.js","components/AlertComponent/AlertComponent.js","components/Tables/TableSections.js","allowedColors.js","components/Chart/Chart.js","components/UserScreen/UserScreen.js","components/Header/logo.png","components/Header/Header.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","href","AlertComponent","props","useState","modalDisplay","toggleDisplay","closeModal","hideError","useEffect","errorMessage","role","id","style","display","type","onClick","TableSections","colors","deleteColor","editColorCount","removeTrendingColor","addColor","fiveMinutesLeft","setFiveMinutesLeft","timerId","setTimeout","clearTimeout","seconds","SortAndGroup","colorRows","map","color","row","scope","colorName","class","addCurrentColorTable","counter","subCurrentColorTable","push","colSpan","val","Math","floor","slice","join","allowedColors","Chart","labelColors","namePassed","newArray","forEach","state","labels","datasets","label","backgroundColor","hoverBackgroundColor","data","options","title","text","fontSize","legend","position","UserScreen","stateColorValue","setStateColorInput","name","width","margin","value","placeholder","onChange","event","target","showError","charAt","toUpperCase","includes","uid","colorToBeDeleted","find","float","withRouter","src","logo","alt","colorData","App","setColor","updateErrorMessage","addCurrentColor","currentColor","timestamp","Date","getTime","threeTrending","prevColors","arrayTimestamp","filter","colorAdded","trendingColors","currentColorPassed","length","sort","a","b","firstColorOnList","shift","CanColorBeBlocked","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAQeA,MAPf,WACI,OACI,qBAAKC,UAAU,qCAAf,SACF,0DAA8B,mBAAGC,KAAK,2BAAR,0B,MCiCrBC,MAnCf,SAAwBC,GACpB,MAAsCC,mBAAS,QAA/C,mBAAOC,EAAP,KAAqBC,EAArB,KAIMC,EAAa,WACfD,EAAc,QACdH,EAAMK,UAAU,OAUpB,OARAC,qBAAU,WACoB,OAAvBN,EAAMO,aAPTJ,EAAc,SAUVC,OAKJ,qBACIP,UAAW,4CACXW,KAAK,QACLC,GAAG,aACHC,MAAO,CAAEC,QAAST,GAJtB,SAMI,sBAAKL,UAAU,sBAAf,UACI,+BAAOG,EAAMO,eACb,wBAAQK,KAAK,SAASf,UAAU,QAAQ,aAAW,QAAQgB,QAAS,kBAAMT,KAA1E,SACI,sBAAM,cAAY,OAAlB,0B,cCyDLU,MAnFf,SAAuBd,GACnB,IAAQe,EAAuEf,EAAvEe,OAAQC,EAA+DhB,EAA/DgB,YAAaC,EAAkDjB,EAAlDiB,eAAgBC,EAAkClB,EAAlCkB,oBAAqBC,EAAanB,EAAbmB,SAClE,EAA8ClB,mBAAS,IAAvD,mBAAOmB,EAAP,KAAwBC,EAAxB,KAEHf,qBAAU,WACH,GAAIc,EAAkB,EAAG,CACzB,IAAME,EAAUC,YAAW,WACvBF,EAAmBD,EAAkB,KACtC,KACC,OAAO,kBAAMI,aAAaF,IAE1BJ,IACAG,EAAmB,OAI3B,IAgCqBI,EApBfC,EAAe,SAACd,GAClB,IAAMe,EAAY,GAgBlB,OAfAZ,EAAOa,KAAI,SAAAC,GACP,GAAGjB,IAASiB,EAAMjB,KAAK,CACnB,IAAMkB,EACF,+BACI,oBAAIC,MAAM,MAAMrB,MAAO,CAAEmB,MAAOA,EAAMG,WAAtC,SAAoDH,EAAMG,YAC1D,qBAAItB,MAAO,CAAEmB,MAAOA,EAAMG,WAA1B,UACI,mBAAGC,MAAM,aAAa,cAAY,OAAOpB,QAAS,kBApB7C,SAACgB,GAC1BV,EAASU,GAmBmEK,CAAqBL,MAC3EA,EAAMM,QACR,mBAAGF,MAAM,cAAc,cAAY,OAAOpB,QAAS,kBAlB9C,SAACgB,GACL,IAAlBA,EAAMM,QACLnB,EAAYa,EAAMpB,IAElBQ,EAAeY,EAAMG,WAcoDI,CAAqBP,WAL7EA,EAAMpB,IASnBkB,EAAUU,KAAKP,OAGhBH,GAWX,OAEI,kCACI,gCACA,+BACI,oBAAII,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,qBACA,oBAAIA,MAAM,MAAV,gCAIJ,gCACA,6BACI,qBAAIO,QAAQ,IAAZ,mCArBSb,EAqByCL,EAhBnD,CAHOK,EAAU,KACPA,EAAU,KAAQ,GAEXA,EAAU,IAAIG,KAJvB,SAAAW,GAAG,MAAI,WAAIC,KAAKC,MAAMF,IAAOG,OAAO,MAIDC,KAAK,aAmBnD,gCACA,+BACI,6BAAKjB,EAAa,cAClB,6BAAKA,EAAa,aAClB,6BAAKA,EAAa,0B,QC/ErBkB,EAAgB,CACzB,YAAa,eAAgB,OAC7B,aAAc,QAAS,QACvB,SACA,QACA,iBACA,OACA,aACA,QACA,YACA,YACA,aACA,YACA,QACA,iBACA,WACA,UACA,OACA,WACA,WACA,gBACA,WACA,WACA,YACA,YACA,cACA,iBACA,aACA,aACA,UACA,aACA,eACA,gBACA,gBACA,gBACA,gBACA,aACA,WACA,cACA,UACA,UACA,aACA,YACA,cACA,cACA,UACA,YACA,aACA,OACA,YACA,OACA,OACA,QACA,cACA,WACA,UACA,YACA,SACA,QACA,QACA,WACA,gBACA,YACA,eACA,YACA,aACA,YACA,uBACA,YACA,YACA,aACA,YACA,cACA,gBACA,eACA,iBACA,iBACA,iBACA,cACA,OACA,YACA,QACA,UACA,SACA,mBACA,aACA,eACA,eACA,iBACA,kBACA,oBACA,kBACA,kBACA,eACA,YACA,YACA,WACA,cACA,OACA,UACA,QACA,YACA,SACA,YACA,SACA,gBACA,YACA,gBACA,gBACA,aACA,YACA,OACA,OACA,OACA,aACA,SACA,gBACA,MACA,YACA,YACA,cACA,SACA,aACA,WACA,WACA,SACA,SACA,UACA,YACA,YACA,YACA,OACA,cACA,YACA,MACA,OACA,UACA,SACA,YACA,SACA,QACA,QACA,aACA,SACF,e,QC5FaC,MAjDf,SAAe7C,GACb,IAAQe,EAAWf,EAAX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","file":"static/js/main.ef557ec8.chunk.js","sourcesContent":["import React from 'react';\nfunction Footer() {\n    return(\n        <div className=\"container-fluid text-center footer\">\n\t\t    <p>Developed with &hearts; by <a href=\"https://mxaba.github.io/\">mxaba.</a></p>\n\t    </div>\n    )\n}\nexport default Footer;","import React, { useState, useEffect } from 'react';\nimport './AlertComponent.css';\nfunction AlertComponent(props) {\n    const [modalDisplay, toggleDisplay] = useState('none');\n    const openModal = () => {\n        toggleDisplay('block');     \n    }\n    const closeModal = () => {\n        toggleDisplay('none'); \n        props.hideError(null);\n    }\n    useEffect(() => {\n        if(props.errorMessage !== null) {\n            openModal()\n        } else {\n            closeModal()\n        }\n    });\n    \n    return(\n        <div \n            className={\"alert alert-danger alert-dismissable mt-4\"} \n            role=\"alert\" \n            id=\"alertPopUp\"\n            style={{ display: modalDisplay }}\n        >\n            <div className=\"d-flex alertMessage\">\n                <span>{props.errorMessage}</span>\n                <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={() => closeModal()}>\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            \n        </div>\n    )\n} \n\nexport default AlertComponent","import React, { useEffect, useState } from 'react'\nimport \"./Table.css\"\n\nfunction TableSections(props){\n    const { colors, deleteColor, editColorCount, removeTrendingColor, addColor}  = props;\n    const [fiveMinutesLeft, setFiveMinutesLeft] = useState(30);\n\n\tuseEffect(() => {\n        if (fiveMinutesLeft > 0) {\n        const timerId = setTimeout(() => {\n            setFiveMinutesLeft(fiveMinutesLeft - 1);\n        }, 1000);\n            return () => clearTimeout(timerId);\n        } else {\n            removeTrendingColor()\n            setFiveMinutesLeft(10)\n        }\n    });\n\n    const addCurrentColorTable = (color) => {\n        addColor(color)\n    }\n\n    const subCurrentColorTable = (color) => {\n        if(color.counter === 1){\n            deleteColor(color.id)\n        } else {\n            editColorCount(color.colorName)\n        }\n    }\n    \n    const SortAndGroup = (type) => {\n        const colorRows = [];\n        colors.map(color => {\n            if(type === color.type){\n                const row = (\n                    <tr key={color.id}>\n                        <th scope=\"row\" style={{ color: color.colorName }}>{color.colorName}</th>\n                        <td style={{ color: color.colorName }}> \n                            <i class=\"fa fa-plus\" aria-hidden=\"true\" onClick={() => addCurrentColorTable(color)}></i> \n                             {color.counter}\n                            <i class=\"fa fa-minus\" aria-hidden=\"true\" onClick={() => subCurrentColorTable(color)}></i> \n                        </td>\n                    </tr>\n                );\n                colorRows.push(row);\n            }\n        })\n        return colorRows\n    }\n\n    const displayTime = (seconds) => {\n        const format = val => `0${Math.floor(val)}`.slice(-2)\n        const hours = seconds / 3600\n        const minutes = (seconds % 3600) / 60\n      \n        return [hours, minutes, seconds % 60].map(format).join(':')\n    }\n\n    return(\n        \n        <table >\n            <thead>\n            <tr>\n                <th scope=\"col\">Trending</th>\n                <th scope=\"col\">Popular</th>\n                <th scope=\"col\">Up and Coming</th>\n            </tr>\n            </thead>\n            \n            <tfoot>\n            <tr>\n                <td colSpan=\"3\">Data will refresh in {displayTime(fiveMinutesLeft)}</td>\n            </tr>\n            </tfoot>\n            <tbody>\n            <tr>\n                <td>{SortAndGroup(\"trending\")}</td>\n                <td>{SortAndGroup(\"popular\")}</td>\n                <td>{SortAndGroup(\"upAndComing\")}</td>\n            </tr>\n            </tbody>\n      </table>\n    )\n}\n\nexport default TableSections;\n","export const allowedColors = [\n    \"AliceBlue\", \"AntiqueWhite\", \"Aqua\",\n    \"Aquamarine\", \"Azure\", \"Beige\",\n    \"Bisque\",\n    \"Black\",\n    \"BlanchedAlmond\",\n    \"Blue\",\n    \"BlueViolet\",\n    \"Brown\",\n    \"BurlyWood\",\n    \"CadetBlue\",\n    \"Chartreuse\",\n    \"Chocolate\",\n    \"Coral\",\n    \"CornflowerBlue\",\n    \"Cornsilk\",\n    \"Crimson\",\n    \"Cyan\",\n    \"DarkBlue\",\n    \"DarkCyan\",\n    \"DarkGoldenRod\",\n    \"DarkGray\",\n    \"DarkGrey\",\n    \"DarkGreen\",\n    \"DarkKhaki\",\n    \"DarkMagenta\",\n    \"DarkOliveGreen\",\n    \"DarkOrange\",\n    \"DarkOrchid\",\n    \"DarkRed\",\n    \"DarkSalmon\",\n    \"DarkSeaGreen\",\n    \"DarkSlateBlue\",\n    \"DarkSlateGray\",\n    \"DarkSlateGrey\",\n    \"DarkTurquoise\",\n    \"DarkViolet\",\n    \"DeepPink\",\n    \"DeepSkyBlue\",\n    \"DimGray\",\n    \"DimGrey\",\n    \"DodgerBlue\",\n    \"FireBrick\",\n    \"FloralWhite\",\n    \"ForestGreen\",\n    \"Fuchsia\",\n    \"Gainsboro\",\n    \"GhostWhite\",\n    \"Gold\",\n    \"GoldenRod\",\n    \"Gray\",\n    \"Grey\",\n    \"Green\",\n    \"GreenYellow\",\n    \"HoneyDew\",\n    \"HotPink\",\n    \"IndianRed\",\n    \"Indigo\",\n    \"Ivory\",\n    \"Khaki\",\n    \"Lavender\",\n    \"LavenderBlush\",\n    \"LawnGreen\",\n    \"LemonChiffon\",\n    \"LightBlue\",\n    \"LightCoral\",\n    \"LightCyan\",\n    \"LightGoldenRodYellow\",\n    \"LightGray\",\n    \"LightGrey\",\n    \"LightGreen\",\n    \"LightPink\",\n    \"LightSalmon\",\n    \"LightSeaGreen\",\n    \"LightSkyBlue\",\n    \"LightSlateGray\",\n    \"LightSlateGrey\",\n    \"LightSteelBlue\",\n    \"LightYellow\",\n    \"Lime\",\n    \"LimeGreen\",\n    \"Linen\",\n    \"Magenta\",\n    \"Maroon\",\n    \"MediumAquaMarine\",\n    \"MediumBlue\",\n    \"MediumOrchid\",\n    \"MediumPurple\",\n    \"MediumSeaGreen\",\n    \"MediumSlateBlue\",\n    \"MediumSpringGreen\",\n    \"MediumTurquoise\",\n    \"MediumVioletRed\",\n    \"MidnightBlue\",\n    \"MintCream\",\n    \"MistyRose\",\n    \"Moccasin\",\n    \"NavajoWhite\",\n    \"Navy\",\n    \"OldLace\",\n    \"Olive\",\n    \"OliveDrab\",\n    \"Orange\",\n    \"OrangeRed\",\n    \"Orchid\",\n    \"PaleGoldenRod\",\n    \"PaleGreen\",\n    \"PaleTurquoise\",\n    \"PaleVioletRed\",\n    \"PapayaWhip\",\n    \"PeachPuff\",\n    \"Peru\",\n    \"Pink\",\n    \"Plum\",\n    \"PowderBlue\",\n    \"Purple\",\n    \"RebeccaPurple\",\n    \"Red\",\n    \"RosyBrown\",\n    \"RoyalBlue\",\n    \"SaddleBrown\",\n    \"Salmon\",\n    \"SandyBrown\",\n    \"SeaGreen\",\n    \"SeaShell\",\n    \"Sienna\",\n    \"Silver\",\n    \"SkyBlue\",\n    \"SlateBlue\",\n    \"SlateGray\",\n    \"SlateGrey\",\n    \"Snow\",\n    \"SpringGreen\",\n    \"SteelBlue\",\n    \"Tan\",\n    \"Teal\",\n    \"Thistle\",\n    \"Tomato\",\n    \"Turquoise\",\n    \"Violet\",\n    \"Wheat\",\n    \"White\",\n    \"WhiteSmoke\",\n    \"Yellow\",\n  \"YellowGreen\",\n];\n","import React from 'react'\nimport {Doughnut} from 'react-chartjs-2';\n\nfunction Chart(props) {\n  const { colors } = props;\n\n  const labelColors = (namePassed) =>{\n    const newArray = []\n    if (namePassed === \"data\" ){\n      colors.forEach(color => {\n        newArray.push(color.counter)\n      })\n    } else { \n      colors.forEach(color => {\n        newArray.push(color.colorName)\n      })\n    }\n    return newArray\n  }\n\n  const state = {\n    labels: labelColors(),\n    datasets: [\n      {\n        label: 'Rainfall',\n        backgroundColor: labelColors(),\n        hoverBackgroundColor: labelColors(),\n        data: labelColors(\"data\")\n      }\n    ]\n  }\n\n  return (\n    <div className=\"chart\">\n      <Doughnut\n        data={state}\n            options={{\n              title:{\n                display:true,\n                text:'Average Rainfall per month',\n                fontSize:20\n              },\n              legend:{\n                display:true,\n                position:'right'\n              }\n            }}\n        />\n    </div>\n  );\n}\n\nexport default Chart;","import React, { useState } from \"react\";\nimport TableSections from \"../Tables/TableSections\";\nimport { uid } from 'uid';\nimport { allowedColors } from \"../../allowedColors\";\nimport Chart from \"../Chart/Chart\";\nimport { Hint } from 'react-autocomplete-hint';\n\nfunction UserScreen(props){\n    const {colors, editColorCount, deleteColor, addColor, removeTrendingColor} = props;\n    const [stateColorValue , setStateColorInput] = useState(\"\")\n    \n    const colorChangeHandler = (event) => setStateColorInput(event.target.value);\n\n    const handleDeleteClick = () => {\n        if(stateColorValue === \"\"){\n            props.showError('Please enter a color you want to deleted');\n        } else {\n            const name = stateColorValue.charAt(0).toUpperCase() + stateColorValue.slice(1);\n            const colorToBeDeleted = colors.find(color => color.colorName === name)\n            if (colorToBeDeleted){\n                deleteColor(colorToBeDeleted.id)\n            } else {\n                props.showError(`This ${name} is not on our requested colors😤`);\n            }\n        }\n        setStateColorInput(\"\")\n    }\n\n    const handleRequestClick = () => {\n        if(stateColorValue === \"\"){\n            props.showError('Please enter a color');\n        } else {\n            const name = stateColorValue.charAt(0).toUpperCase() + stateColorValue.slice(1);\n            if (allowedColors.includes(name)){\n                    addColor({\n                        id: uid(),\n                        colorName: name,\n                        counter: 1,\n                        type: \"upAndComing\"\n                    })\n                    props.showError(null)\n            } else {\n                props.showError(`${name} is not supported`);\n            }\n            \n        }\n    }\n\n\n    return(\n        \n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col col-4 threeButton\">\n                <Hint options={allowedColors}>\n                    <input type=\"text\" \n                        name=\"color\" \n                        id=\"color\"\n                        style={{\n                            width: '100%',\n                            margin: 0,\n                        }}\n                        className=\"form__input\"\n                        value={stateColorValue} \n                        placeholder=\"Request/Delete/Edit color\"\n                        onChange={colorChangeHandler}\n                    />\n                </Hint> <br /><br />\n                    <button className=\"btn btn-outline-success\" onClick={handleRequestClick}>\n                        <i class=\"fa fa-paper-plane\" aria-hidden=\"true\"></i>\n                    </button>\n\n                    <button className=\"btn btn-outline-danger\" onClick={handleDeleteClick}>\n                        <i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i>\n                    </button>\n\n                    <br />\n                    <Chart colors={colors}/>\n                </div>\n                <div class=\"w-20\"></div>\n\n                <div className=\"col\" style={{float: \"right\"}}>\n                    <TableSections deleteColor={deleteColor} editColorCount={editColorCount} addColor={addColor} removeTrendingColor={removeTrendingColor} colors={colors}/>\n                </div>\n            </div>\n    \t</div>\n    )\n}\n\nexport default UserScreen;","export default __webpack_public_path__ + \"static/media/logo.9315e4ab.png\";","import logo from \"./logo.png\"\nimport \"./Header.css\"\nimport React from 'react';\nimport { withRouter } from \"react-router-dom\";\nfunction Header(props) {\n    return(\n        <header>\n        <img className=\"logo\" src={logo} alt=\"Site Logo\" />\n        <nav>\n            <ul className=\"nav__links\">\n            <li>\n            <span className=\"h3\">Hey, Welcome to the 🎈Balloon-Shop</span> <br/>\n            {/* {renderLogout()} */}\n                \n            </li>\n            </ul>\n        </nav>\n        </header>\n    )\n}\n\nexport default withRouter(Header);","export const colorData = [\n   {\n        id: 1,\n        colorName: \"Green\",\n        counter: 6,\n        type: \"popular\"\n      }, {\n        id: 2,\n        colorName: \"Orange\",\n        counter: 1,\n        type: \"upAndComing\"\n      }\n  ];","import './App.css';\nimport React, { useState } from 'react'\n\nimport Footer from './components/Footer/Footer';\nimport AlertComponent from './components/AlertComponent/AlertComponent';\n\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\nimport UserScreen from './components/UserScreen/UserScreen';\nimport Header from './components/Header/Header';\nimport { colorData } from './data';\n\nfunction App() {\n  const [colors, setColor] = useState(colorData);\n  const [colorsDatabase, setColorDatabase] = useState([]);\n  const [errorMessage, updateErrorMessage] = useState(null);\n  \n  const CanColorBeBlocked = (colorAdded) => {\n    const trendingColors = colors.filter(color => color.type === \"trending\")\n    const currentColorPassed = colors.find(color => color.colorName === colorAdded.colorName && color.counter === 10)\n\n    if (trendingColors.length >=3 && currentColorPassed){\n      trendingColors.sort(function (a, b) {\n        return a.timestamp - b.timestamp\n      });\n      var firstColorOnList = trendingColors.shift()\n      const currentColor = colors.find(color => color.id === firstColorOnList.id)\n      currentColor.type = \"popular\"\n      currentColor.counter = 9\n    }\n  }\n\n  // const fetchColorDataBase = async () => {\n  //   let { data: colors, error } = await supabase\n  //           .from(\"colors\")\n  //           .select(\"*\")\n  //           .order(\"id\", { ascending: false });\n    \n  // }\n\n  \n\n  function addCurrentColor(currentColor) {\n    if (currentColor.counter < 5) {\n      currentColor.type = \"upAndComing\";\n    } else if (currentColor.counter >= 5 && currentColor.counter < 11) {\n      currentColor.type = \"popular\";\n    } else if (currentColor.counter >= 11) {\n      currentColor.type = \"trending\";\n      currentColor.timestamp = (new Date().getTime()) / 1000;\n    }\n  }\n\n  const addColor = (colorAdded) => {\n    setColor((prevColors) => {\n      CanColorBeBlocked(colorAdded)\n      const currentColor = prevColors.find(color => color.colorName === colorAdded.colorName)\n      if(currentColor){\n        currentColor.counter++;\n        addCurrentColor(currentColor);\n        return [...prevColors];\n      } else {\n        return [...prevColors, colorAdded];\n      }\n      \n    });\n  };\n\n  const addColorDatabase = async (colorAdded) => {\n    \n  }\n\n  const threeTrending = () => {\n    setColor((prevColors) => {\n      const arrayTimestamp = []\n      prevColors.map(color => {\n        if(color.type === \"trending\"){\n          arrayTimestamp.push(color.timestamp)\n        }\n      })\n      return [...prevColors];\n    });\n  };\n\n  const removeTrendingColor = () => {\n    setColor((prevColors) => {\n      prevColors.map(color => {\n        if(color.type === \"trending\"){\n          if ((((new Date().getTime()) / 1000) - color.timestamp) > 300){\n            color.type = \"popular\"\n            color.counter = 9\n          }\n        }\n      })\n      return [...prevColors];\n    })\n  }\n\n  const deleteColor = (id) => {\n    setColor((prevColors) => {\n      return prevColors.filter((color) => color.id !== id);\n    });\n  };\n\n  const subractColor = (name) => {\n    setColor((prevColors) => {\n      const currentColor = prevColors.find(color => color.colorName === name)\n      if (currentColor){\n        currentColor.counter--\n        addCurrentColor(currentColor);\n      }\n      return [...prevColors];\n    });\n  };\n\n  return (\n    <Router>\n      <div className=\"App container\">\n        <Header />\n        <UserScreen threeTrending={threeTrending} editColorCount={subractColor} deleteColor={deleteColor} removeTrendingColor={removeTrendingColor} addColor={addColor} colors={colors} showError={updateErrorMessage}/>\n        <AlertComponent errorMessage={errorMessage} hideError={updateErrorMessage}/>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}