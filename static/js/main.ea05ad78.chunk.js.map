{"version":3,"sources":["components/Footer/Footer.js","components/AlertComponent/AlertComponent.js","components/Tables/TableSections.js","allowedColors.js","components/Chart/Chart.js","components/UserScreen/UserScreen.js","components/Header/logo.png","components/Header/Header.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","href","AlertComponent","props","useState","modalDisplay","toggleDisplay","closeModal","hideError","useEffect","errorMessage","role","id","style","display","type","onClick","TableSections","colors","removeTrendingColor","fiveMinutesLeft","setFiveMinutesLeft","timerId","setTimeout","clearTimeout","seconds","SortAndGroup","colorRows","map","color","row","scope","colorName","counter","push","colSpan","val","Math","floor","slice","join","allowedColors","Chart","labelColors","namePassed","newArray","forEach","state","labels","datasets","label","backgroundColor","hoverBackgroundColor","data","options","title","text","fontSize","legend","position","UserScreen","addColor","stateColorValue","setStateColorInput","CanColorBeBlocked","trendingColors","filter","currentColor","find","length","name","value","placeholder","onChange","event","target","showError","console","log","charAt","toUpperCase","toLowerCase","includes","uid","class","float","withRouter","src","logo","alt","colorData","App","setColor","updateErrorMessage","path","exact","prevColors","Date","getTime","timestamp","colorAdd","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea05ad78.chunk.js","sourcesContent":["import React from 'react';\nfunction Footer() {\n    return(\n        <div className=\"container-fluid text-center footer\">\n\t\t    <p>Developed with &hearts; by <a href=\"https://mxaba.github.io/\">mxaba.</a></p>\n\t    </div>\n    )\n}\nexport default Footer;","import React, { useState, useEffect } from 'react';\nimport './AlertComponent.css';\nfunction AlertComponent(props) {\n    const [modalDisplay, toggleDisplay] = useState('none');\n    const openModal = () => {\n        toggleDisplay('block');     \n    }\n    const closeModal = () => {\n        toggleDisplay('none'); \n        props.hideError(null);\n    }\n    useEffect(() => {\n        if(props.errorMessage !== null) {\n            openModal()\n        } else {\n            closeModal()\n        }\n    });\n    \n    return(\n        <div \n            className={\"alert alert-danger alert-dismissable mt-4\"} \n            role=\"alert\" \n            id=\"alertPopUp\"\n            style={{ display: modalDisplay }}\n        >\n            <div className=\"d-flex alertMessage\">\n                <span>{props.errorMessage}</span>\n                <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={() => closeModal()}>\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            \n        </div>\n    )\n} \n\nexport default AlertComponent","import React, { useEffect, useState } from 'react'\nimport \"./Table.css\"\n\nfunction TableSections(props){\n    const { colors, removeTrendingColor}  = props;\n    const [fiveMinutesLeft, setFiveMinutesLeft] = useState(30);\n\n\tuseEffect(() => {\n        if (fiveMinutesLeft > 0) {\n        const timerId = setTimeout(() => {\n            setFiveMinutesLeft(fiveMinutesLeft - 1);\n        }, 1000);\n            return () => clearTimeout(timerId);\n        } else {\n            removeTrendingColor()\n            setFiveMinutesLeft(10)\n        }\n    });\n    \n    const SortAndGroup = (type) => {\n        const colorRows = [];\n        colors.map(color => {\n            if(type === color.type){\n                const row = (\n                    <tr key={color.id}>\n                        <th scope=\"row\">{color.colorName}</th>\n                        <td>{color.counter}</td>\n                    </tr>\n                );\n                colorRows.push(row);\n            }\n        })\n        return colorRows\n    }\n\n    const displayTime = (seconds) => {\n        const format = val => `0${Math.floor(val)}`.slice(-2)\n        const hours = seconds / 3600\n        const minutes = (seconds % 3600) / 60\n      \n        return [hours, minutes, seconds % 60].map(format).join(':')\n    }\n\n    return(\n        \n        <table >\n            <thead>\n            <tr>\n                <th scope=\"col\">Trending</th>\n                <th scope=\"col\">Popular</th>\n                <th scope=\"col\">Up and Coming</th>\n            </tr>\n            </thead>\n            \n            <tfoot>\n            <tr>\n                <td colSpan=\"3\">Data will refresh in {displayTime(fiveMinutesLeft)}</td>\n            </tr>\n            </tfoot>\n            <tbody>\n            <tr>\n                <td>{SortAndGroup(\"trending\")}</td>\n                <td>{SortAndGroup(\"popular\")}</td>\n                <td>{SortAndGroup(\"upAndComing\")}</td>\n            </tr>\n            </tbody>\n      </table>\n    )\n}\n\nexport default TableSections;\n","export const allowedColors = ['Aqua', 'Black', 'Blue', 'Fuchsia', 'Gray', 'Green', 'Lime', 'Maroon', 'Navy', 'Olive', 'Orange', 'Purple', 'Red', 'Silver', 'Teal', 'White', 'Yellow'];\n","import React from 'react'\nimport {Pie, Doughnut} from 'react-chartjs-2';\n// import { colorData } from '../../data';\n\nfunction Chart(props) {\n  const { colors } = props;\n\n  const labelColors = (namePassed) =>{\n    const newArray = []\n    if (namePassed === \"data\" ){\n      colors.forEach(color => {\n        newArray.push(color.counter)\n      })\n    } else { \n      colors.forEach(color => {\n        newArray.push(color.colorName)\n      })\n    }\n    return newArray\n  }\n\n  const state = {\n    labels: labelColors(),\n    datasets: [\n      {\n        label: 'Rainfall',\n        backgroundColor: labelColors(),\n        hoverBackgroundColor: labelColors(),\n        data: labelColors(\"data\")\n      }\n    ]\n  }\n\n  return (\n    <div>\n      <Doughnut\n        data={state}\n            options={{\n              title:{\n                display:true,\n                text:'Average Rainfall per month',\n                fontSize:20\n              },\n              legend:{\n                display:true,\n                position:'right'\n              }\n            }}\n        />\n    </div>\n  );\n}\n\nexport default Chart;","import React, { useState } from \"react\";\nimport TableSections from \"../Tables/TableSections\";\nimport { uid } from 'uid';\nimport { allowedColors } from \"../../allowedColors\";\nimport Chart from \"../Chart/Chart\";\n\nfunction UserScreen(props){\n    const {colors, addColor, removeTrendingColor} = props;\n    const [stateColorValue , setStateColorInput] = useState(\"\")\n\n    const CanColorBeBlocked = (colorName) => {\n        const trendingColors = colors.filter(color => color.type === \"trending\")\n        const currentColor = colors.find(color => color.colorName === colorName && color.counter === 10)\n        if (trendingColors.length >=3 && currentColor){\n          return true\n        } else {\n          return false\n        }\n      }\n\n    const handleSubmitClick = () => {\n        if(stateColorValue === \"\"){\n            props.showError('Please enter a color');\n        } else {\n            console.log(\"\")\n            console.log(CanColorBeBlocked(stateColorValue))\n            const name = stateColorValue.charAt(0).toUpperCase() + stateColorValue.slice(1).toLowerCase();\n            if (allowedColors.includes(name)){\n                if (CanColorBeBlocked(name)){\n                    props.showError(\"Only three allowed to trend\")\n                } else {\n                    addColor({\n                        id: uid(),\n                        colorName: name,\n                        counter: 1,\n                        type: \"upAndComing\"\n                    })\n                    props.showError(null)\n                }\n            } else {\n                props.showError(`${name} is not supported`);\n            }\n            \n        }\n        setStateColorInput(\"\")\n    }\n\n    const colorChangeHandler = (event) => setStateColorInput(event.target.value);\n\n    return(\n        \n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-4 col-sm-4 col-md-4 col-lg-4 col-xl-4\">\n                    <input type=\"text\" \n                        name=\"color\" \n                        id=\"color\" \n                        className=\"form__input\"\n                        value={stateColorValue} \n                        placeholder=\"Request color\"\n                        onChange={colorChangeHandler}\n                    />\n                    <input type=\"submit\" \n                        value=\"Submit\" \n                        className=\"btn\"\n                        onClick={handleSubmitClick}\n                    />\n                    <Chart colors={colors}/>\n                </div>\n                <div class=\"w-20\"></div>\n\n                <div className=\"col-8 col-sm-8 col-md-8 col-lg-8 col-xl-8\" style={{float: \"right\"}}>\n                    <TableSections removeTrendingColor={removeTrendingColor} colors={colors}/>\n                </div>\n            </div>\n    \t</div>\n    )\n}\n\nexport default UserScreen;\n","export default __webpack_public_path__ + \"static/media/logo.9315e4ab.png\";","import logo from \"./logo.png\"\nimport \"./Header.css\"\nimport React from 'react';\nimport { withRouter } from \"react-router-dom\";\nfunction Header(props) {\n    return(\n        <header>\n        <img className=\"logo\" src={logo} alt=\"Site Logo\" />\n        <nav>\n            <ul className=\"nav__links\">\n            <li>\n            <span className=\"h3\">Hey, Welcome to the 🎈Balloon-Shop</span> <br/>\n            {/* {renderLogout()} */}\n                \n            </li>\n            </ul>\n        </nav>\n        </header>\n    )\n}\n\nexport default withRouter(Header);","export const colorData = [\n   {\n        id: 1,\n        colorName: \"Green\",\n        counter: 6,\n        type: \"popular\"\n      }, {\n        id: 2,\n        colorName: \"Orange\",\n        counter: 1,\n        type: \"upAndComing\"\n      }\n  ];","import './App.css';\nimport React, { useState } from 'react'\n\nimport Footer from './components/Footer/Footer';\nimport AlertComponent from './components/AlertComponent/AlertComponent';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport UserScreen from './components/UserScreen/UserScreen';\nimport Header from './components/Header/Header';\nimport { colorData } from './data';\n\nfunction App() {\n  const [colors, setColor] = useState(colorData);\n  const [errorMessage, updateErrorMessage] = useState(null);\n  \n  const addColor = (colorAdd) => {\n    setColor((prevColors) => {\n      const trendingColors = prevColors.map(color => color.type === \"trending\")\n      const currentColor = prevColors.find(color => color.colorName === colorAdd.colorName)\n      if(currentColor){\n        currentColor.counter++\n        if(currentColor.counter >= 5 && currentColor.counter < 11){\n          currentColor.type = \"popular\"\n        } else if (currentColor.counter >= 11){\n          currentColor.type = \"trending\"\n          currentColor.timestamp =  (new Date().getTime()) / 1000;\n        }\n        return [...prevColors];\n      } else {\n        return [...prevColors, colorAdd];\n      }\n      \n    });\n  };\n\n  const removeTrendingColor = () => {\n    setColor((prevColors) => {\n      prevColors.map(color => {\n        if(color.type === \"trending\"){\n          if ((((new Date().getTime()) / 1000) - color.timestamp) > 300){\n            color.type = \"popular\"\n            color.counter = 9\n          }\n        }\n      })\n      return [...prevColors];\n    })\n  }\n\n\n  return (\n    <Router>\n      <div className=\"App container\">\n        <Switch>\n          <Route path=\"/\" exact={true}>\n            <Header />\n            <UserScreen removeTrendingColor={removeTrendingColor} addColor={addColor} colors={colors} showError={updateErrorMessage}/>\n          </Route>\n        </Switch>\n        <AlertComponent errorMessage={errorMessage} hideError={updateErrorMessage}/>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}